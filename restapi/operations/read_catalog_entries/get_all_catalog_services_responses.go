// Code generated by go-swagger; DO NOT EDIT.

package read_catalog_entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	CatalogEntryPackageVersion "github.com/kathra-project/kathra-core-model-go"
)

// GetAllCatalogServicesOKCode is the HTTP code returned for type GetAllCatalogServicesOK
const GetAllCatalogServicesOKCode int = 200

/*GetAllCatalogServicesOK CatalogEntryPackage with providerId

swagger:response getAllCatalogServicesOK
*/
type GetAllCatalogServicesOK struct {

	/*
	  In: Body
	*/
	Payload []CatalogEntryPackageVersion.CatalogEntryPackageVersion `json:"body,omitempty"`
}

// NewGetAllCatalogServicesOK creates GetAllCatalogServicesOK with default headers values
func NewGetAllCatalogServicesOK() *GetAllCatalogServicesOK {

	return &GetAllCatalogServicesOK{}
}

// WithPayload adds the payload to the get all catalog services o k response
func (o *GetAllCatalogServicesOK) WithPayload(payload []CatalogEntryPackageVersion.CatalogEntryPackageVersion) *GetAllCatalogServicesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all catalog services o k response
func (o *GetAllCatalogServicesOK) SetPayload(payload []CatalogEntryPackageVersion.CatalogEntryPackageVersion) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCatalogServicesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]CatalogEntryPackageVersion.CatalogEntryPackageVersion, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
